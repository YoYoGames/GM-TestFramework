name: CI

on:
  pull_request:

  workflow_dispatch:
    inputs:
       CONFIG_FILE:
         description: "CONFIG_FILE"
         required: true
       RSS_Feed:
         description: "RSS_Feed"
         required: false
         type: string
       EXTRA_PARAMS:
          description: "EXTRA_PARAMS from config"
          required: false
          type: string         

jobs:
 
  CI:
    name: "CI"
    runs-on: Windows
    steps:
      - name: Check out the GM-TestFramework repo
        uses: actions/checkout@v4
        with:
          path: GM-TF
      - run: .\setup.bat
        working-directory: GM-TF
        shell: cmd          
      - name: Testing Manually witth passing RSS_Feed for Beta and Monthly builds
        if: github.event_name == 'workflow_dispatch'
        run: run_ci.bat ${{ github.event.inputs.CONFIG_FILE }} ${{ github.event.inputs.RSS_Feed }} ${{ github.event.inputs.EXTRA_PARAMS }}
        working-directory: GM-TF  
        shell: cmd         
      - name: Testing on PR
        if: github.event_name == 'pull_request' || github.event_name == 'push'
        run: python framework_launcher.py -cf C:\GM-TestFramework\configs\config_ci.json -f "https://gms.yoyogames.com/Zeus-Runtime-Nocturnus-I.rss"            
        working-directory: GM-TF   
        shell: cmd        
      - name: Upload tests Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test_results
          path: ${{ github.workspace }}\GM-TF\workspace\results\tests\*\*.json
      - name: Upload summary Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: summary_file
          path: ${{ github.workspace }}\GM-TF\workspace\summary.json

  # Slack-Notification:
  #    runs-on: ubuntu-latest
  #    needs: CI
  #    steps:
  #       - name: Download summary Artifacts
  #         uses: actions/download-artifact@v3
  #         with:
  #           name: summary_file
  #           path: test
  #       - run: |
  #            cd test
  #            cat summary.json > summary.txt
  #       - name: Upload to slack step
  #         uses: MeilCli/slack-upload-file@v3
  #         with:
  #           slack_token: ${{ secrets.SLACK_TOKEN }}
  #           file_type: txt
  #           file_path: test/summary.txt
  #           channel_id: ''
  #         continue-on-error: true
        
      
